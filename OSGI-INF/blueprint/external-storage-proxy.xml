<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0
            http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://camel.apache.org/schema/blueprint
            http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
            ">

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/external_storage_proxy"/>
    <property name="username" value="****"/>
    <property name="password" value="****"/>
  </bean>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <restConfiguration component="jetty" port="9091">
      <componentProperty key="foo" value="123"/>
    </restConfiguration>

    <rest path="/">
      <get uri="/status/?{external_uri}" produces="application/json">
        <to uri="direct:status"/>
      </get>
      <post uri="/stage/?{external_uri}" produces="application/json">
        <to uri="direct:stage"/>
      </post>
    </rest>

    <route>
      <from uri="direct:status"/>
      <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
        <constant>200</constant>
      </setHeader>
      <to uri="direct:log"/>
      <to uri="mustache:status.tmpl"/>
    </route>

    <route>
      <from uri="direct:stage"/>
      <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
        <constant>200</constant>
      </setHeader>
      <to uri="mustache:stage.tmpl"/>
    </route>

    <route>
      <from uri="direct:log" />
      <log message="Headers: ${headers}"/>
      <log message="Body: ${body}"/>
    </route>

    <route id="new-job">
      <from uri="direct:new-job"/>
      <to uri="sql:INSERT INTO jobs (EXTERNAL_URI, FEDORA_URI, SERVICE, STAGED) VALUES ('1234uuidabc', '123ab45cd', 's3', 0);"/>
      <log message="Created new job"/>
    </route>

    <route id="select-job">
      <from uri="direct:select-job"/>
      <to uri="sql:SELECT * FROM jobs;"/>
      <log message="Select job"/>
    </route>

  </camelContext>
</blueprint>

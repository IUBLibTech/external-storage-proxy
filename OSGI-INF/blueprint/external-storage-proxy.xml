<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0
            http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://camel.apache.org/schema/blueprint
            http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
            ">
  <cm:property-placeholder id="external_storage_config" persistent-id="external_storage" update-strategy="reload"/>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <restConfiguration component="jetty" port="9091">
      <componentProperty key="foo" value="123"/>
    </restConfiguration>

    <rest path="/">
      <get uri="/status/?{external_uri}" produces="application/json">
        <to uri="direct:status"/>
      </get>
      <post uri="/stage/?{external_uri}" produces="application/json">
        <to uri="direct:stage"/>
      </post>
    </rest>

    <route>
      <from uri="direct:status"/>
      <choice>
        <when>
          <simple>${headers.service} == 's3'</simple>
          <to uri="direct:status_s3"/>
        </when>
        <when><simple>${headers.service} == 'file'</simple>
          <to uri="direct:status_file"/></when>
      </choice>
      <to uri="direct:log"/>
      <to uri="mustache:status.tmpl"/>
    </route>

    <route>
      <from uri="direct:stage"/>
      <choice>
        <when>
          <simple>${headers.service} == 's3'</simple>
          <to uri="direct:stage_s3"/>
        </when>
      </choice>
      <to uri="direct:log"/>
    </route>

    <route>
      <from uri="direct:status_s3"/>
      <pollEnrich timeout="10000" aggregateOnException="true">
        <simple>aws-s3:{{s3_bucket}}?fileName=${header.external_uri}&amp;includeBody=false&amp;synchronous=false&amp;deleteAfterRead=false&amp;accessKey={{s3_access_key}}&amp;secretKey={{s3_secret_key}}</simple>
      </pollEnrich>
      <log message="Last Modified: ${headers.CamelAwsS3LastModified}"/>
    </route>

    <route>
      <from uri="direct:stage_s3"/>
      <pollEnrich timeout="10000" aggregateOnException="true">
        <simple>aws-s3:{{s3_bucket}}?fileName=${header.external_uri}&amp;synchronous=false&amp;deleteAfterRead=false&amp;accessKey={{s3_access_key}}&amp;secretKey={{s3_secret_key}}</simple>
      </pollEnrich>
      <log message="Last Modified: ${headers.CamelAwsS3LastModified}"/>
      <to uri="direct:write_file_cache"/>
    </route>

    <route>
      <from uri="direct:status_file"/>
      <to uri="direct:read_file_cache"/>
    </route>

    <route>
      <from uri="direct:read_file_cache"/>
      <!--<setHeader headerName="CamelFileName"><simple>${cache_dir}/${header.external_uri}</simple></setHeader>-->
      <pollEnrich timeout="0">
        <simple>file:{{cache_dir}}/${header.external_uri}</simple>
      </pollEnrich>
    </route>

    <route>
      <from uri="direct:write_file_cache"/>
      <!--<setHeader headerName="CamelFileName"><simple>${header.external_uri}</simple></setHeader>-->
      <enrich>
        <simple>file:{{cache_dir}}/${header.external_uri}</simple>
      </enrich>
    </route>

    <route>
      <from uri="direct:log" />
      <log message="Headers: ${headers}"/>
      <!--<log message="Body: ${body}"/>-->
    </route>

  </camelContext>
</blueprint>

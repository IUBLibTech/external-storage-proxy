<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0
            http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://camel.apache.org/schema/blueprint
            http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
            ">
  <cm:property-placeholder id="external_proxy.config" persistent-id="camel.blueprint">
    <cm:default-properties>
      <cm:property name="s3_url" value="http://localhost:8080"/>
    </cm:default-properties>
  </cm:property-placeholder>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <restConfiguration component="jetty" port="9091">
      <componentProperty key="foo" value="123"/>
    </restConfiguration>

    <rest path="/">
      <get uri="/status/?{external_uri}" produces="application/json">
        <to uri="direct:status"/>
      </get>
      <post uri="/stage/?{external_uri}" produces="application/json">
        <to uri="direct:stage"/>
      </post>
    </rest>

    <route>
      <from uri="direct:status"/>
      <choice>
        <when>
          <simple>${headers.service} == 's3'</simple>
          <to uri="direct:status_s3"/>
        </when>
      </choice>

      <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
        <constant>200</constant>
      </setHeader>
      <to uri="direct:log"/>
      <to uri="mustache:status.tmpl"/>
    </route>

    <route>
      <from uri="direct:stage"/>
      <transform>
        <constant>Bye World</constant>
      </transform>
    </route>

    <route>
      <from uri="direct:status_s3"/>
      <setHeader headerName="Exchange.HTTP_URI">
        <simple>{{s3_url}}/${headers.external_url}/status</simple>
      </setHeader>
      <to uri="http4://fakehost/"/>
    </route>

    <route>
      <from uri="direct:log" />
      <log message="Headers: ${headers}"/>
      <log message="Body: ${body}"/>
    </route>

  </camelContext>
</blueprint>
